[{"C:\\Users\\chrfe\\Desktop\\Informatik Projekte\\Website\\react\\chess-game\\src\\index.js":"1","C:\\Users\\chrfe\\Desktop\\Informatik Projekte\\Website\\react\\chess-game\\src\\chess.js":"2","C:\\Users\\chrfe\\Desktop\\Informatik Projekte\\Website\\react\\chess-game\\src\\chess_ai.js":"3"},{"size":23329,"mtime":1613939309807,"results":"4","hashOfConfig":"5"},{"size":44296,"mtime":1613939321499,"results":"6","hashOfConfig":"5"},{"size":6759,"mtime":1613293454004,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1umvizx",{"filePath":"10","messages":"11","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"C:\\Users\\chrfe\\Desktop\\Informatik Projekte\\Website\\react\\chess-game\\src\\index.js",["16","17","18","19","20","21","22","23","24","25","26","27","28","29"],"C:\\Users\\chrfe\\Desktop\\Informatik Projekte\\Website\\react\\chess-game\\src\\chess.js",["30","31","32","33","34","35","36","37","38","39","40","41"],"C:\\Users\\chrfe\\Desktop\\Informatik Projekte\\Website\\react\\chess-game\\src\\chess_ai.js",["42","43","44"],"let EMPTY = \"  \";\r\nvar minimaxRoot =function(depth, game, isMaximisingPlayer) {\r\n    \r\n    var newGameMoves = game.ugly_moves();\r\n    var bestMove = -9999;\r\n    var bestMoveFound;\r\n    \r\n    \r\n    for(var i = 0; i < newGameMoves.length; i++) {\r\n        var newGameMove = newGameMoves[i]\r\n        var moveWasPlayed = game.ugly_move(newGameMove);\r\n        var value = minimax(depth - 1, game, -10000, 10000, !isMaximisingPlayer);\r\n        if(moveWasPlayed)\r\n        {\r\n            game.undo();\r\n        }\r\n        else{\r\n            game.printStatus(newGameMove);\r\n        }\r\n        if(value >= bestMove) {\r\n            bestMove = value;\r\n            bestMoveFound = newGameMove;\r\n        }\r\n    }\r\n    return bestMoveFound;\r\n};\r\n\r\nexport default minimaxRoot;\r\n\r\nvar minimax = function (depth, game, alpha, beta, isMaximisingPlayer) {\r\n    if (depth === 0) {\r\n        return -evaluateBoard(game.board);\r\n    }\r\n    \r\n    var newGameMoves = game.ugly_moves();\r\n    \r\n    if (isMaximisingPlayer) {\r\n        var bestMove = -9999;\r\n        for (var i = 0; i < newGameMoves.length; i++) {\r\n            var moveWasPlayed = game.ugly_move(newGameMoves[i]);\r\n            bestMove = Math.max(bestMove, minimax(depth - 1, game, alpha, beta, !isMaximisingPlayer));\r\n            if(moveWasPlayed)\r\n            {\r\n                game.undo();\r\n            }\r\n            else{\r\n                game.printStatus(newGameMoves[i]);\r\n            }\r\n            alpha = Math.max(alpha, bestMove);\r\n            if (beta <= alpha) {\r\n                return bestMove;\r\n            }\r\n        }\r\n        return bestMove;\r\n    } else {\r\n        var bestMove = 9999;\r\n        for (var i = 0; i < newGameMoves.length; i++) {\r\n            moveWasPlayed = game.ugly_move(newGameMoves[i]);\r\n            bestMove = Math.min(bestMove, minimax(depth - 1, game, alpha, beta, !isMaximisingPlayer));\r\n            if(moveWasPlayed)\r\n            {\r\n                game.undo();\r\n            }\r\n            else{\r\n                game.printStatus(newGameMoves[i]);\r\n            }\r\n            beta = Math.min(beta, bestMove);\r\n            if (beta <= alpha) {\r\n                return bestMove;\r\n            }\r\n        }\r\n        return bestMove;\r\n    }\r\n};\r\n\r\nvar evaluateBoard = function (board) {\r\n    var totalEvaluation = 0;\r\n    for (var i = 0; i < 8; i++) {\r\n        for (var j = 0; j < 8; j++) {\r\n            totalEvaluation = totalEvaluation + getPieceValue(board[i][j], i ,j);\r\n        }\r\n    }\r\n    return totalEvaluation;\r\n};\r\n\r\nvar reverseArray = function(array) {\r\n    return array.slice().reverse();\r\n};\r\n\r\nvar pawnEvalWhite =\r\n[\r\n    [0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],\r\n    [5.0,  5.0,  5.0,  5.0,  5.0,  5.0,  5.0,  5.0],\r\n    [1.0,  1.0,  2.0,  3.0,  3.0,  2.0,  1.0,  1.0],\r\n    [0.5,  0.5,  1.0,  2.5,  2.5,  1.0,  0.5,  0.5],\r\n    [0.0,  0.0,  0.0,  2.0,  2.0,  0.0,  0.0,  0.0],\r\n    [0.5, -0.5, -1.0,  0.0,  0.0, -1.0, -0.5,  0.5],\r\n    [0.5,  1.0, 1.0,  -2.0, -2.0,  1.0,  1.0,  0.5],\r\n    [0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0]\r\n];\r\n\r\nvar pawnEvalBlack = reverseArray(pawnEvalWhite);\r\n\r\nvar knightEval =\r\n[\r\n    [-5.0, -4.0, -3.0, -3.0, -3.0, -3.0, -4.0, -5.0],\r\n    [-4.0, -2.0,  0.0,  0.0,  0.0,  0.0, -2.0, -4.0],\r\n    [-3.0,  0.0,  1.0,  1.5,  1.5,  1.0,  0.0, -3.0],\r\n    [-3.0,  0.5,  1.5,  2.0,  2.0,  1.5,  0.5, -3.0],\r\n    [-3.0,  0.0,  1.5,  2.0,  2.0,  1.5,  0.0, -3.0],\r\n    [-3.0,  0.5,  1.0,  1.5,  1.5,  1.0,  0.5, -3.0],\r\n    [-4.0, -2.0,  0.0,  0.5,  0.5,  0.0, -2.0, -4.0],\r\n    [-5.0, -4.0, -3.0, -3.0, -3.0, -3.0, -4.0, -5.0]\r\n];\r\n\r\nvar bishopEvalWhite = [\r\n    [ -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0],\r\n    [ -1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0],\r\n    [ -1.0,  0.0,  0.5,  1.0,  1.0,  0.5,  0.0, -1.0],\r\n    [ -1.0,  0.5,  0.5,  1.0,  1.0,  0.5,  0.5, -1.0],\r\n    [ -1.0,  0.0,  1.0,  1.0,  1.0,  1.0,  0.0, -1.0],\r\n    [ -1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0, -1.0],\r\n    [ -1.0,  0.5,  0.0,  0.0,  0.0,  0.0,  0.5, -1.0],\r\n    [ -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0]\r\n];\r\n\r\nvar bishopEvalBlack = reverseArray(bishopEvalWhite);\r\n\r\nvar rookEvalWhite = [\r\n    [  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],\r\n    [  0.5,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  0.5],\r\n    [ -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],\r\n    [ -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],\r\n    [ -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],\r\n    [ -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],\r\n    [ -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],\r\n    [  0.0,   0.0, 0.0,  0.5,  0.5,  0.0,  0.0,  0.0]\r\n];\r\n\r\nvar rookEvalBlack = reverseArray(rookEvalWhite);\r\n\r\nvar evalQueen = [\r\n    [ -2.0, -1.0, -1.0, -0.5, -0.5, -1.0, -1.0, -2.0],\r\n    [ -1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0],\r\n    [ -1.0,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -1.0],\r\n    [ -0.5,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -0.5],\r\n    [  0.0,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -0.5],\r\n    [ -1.0,  0.5,  0.5,  0.5,  0.5,  0.5,  0.0, -1.0],\r\n    [ -1.0,  0.0,  0.5,  0.0,  0.0,  0.0,  0.0, -1.0],\r\n    [ -2.0, -1.0, -1.0, -0.5, -0.5, -1.0, -1.0, -2.0]\r\n];\r\n\r\nvar kingEvalWhite = [\r\n    \r\n    [ -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],\r\n    [ -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],\r\n    [ -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],\r\n    [ -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],\r\n    [ -2.0, -3.0, -3.0, -4.0, -4.0, -3.0, -3.0, -2.0],\r\n    [ -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0],\r\n    [  2.0,  2.0,  0.0,  0.0,  0.0,  0.0,  2.0,  2.0 ],\r\n    [  2.0,  3.0,  1.0,  0.0,  0.0,  1.0,  3.0,  2.0 ]\r\n];\r\n\r\nvar kingEvalBlack = reverseArray(kingEvalWhite);\r\n\r\n\r\n\r\n\r\nvar getPieceValue = function (piece, y, x) {\r\n    if (piece === EMPTY) {\r\n        return 0;\r\n    }\r\n    var getAbsoluteValue = function (piece, isWhite, x ,y) {\r\n        if (piece.slice(0,1) === 'p') {\r\n            return 10 + ( isWhite ? pawnEvalWhite[y][x] : pawnEvalBlack[y][x] );\r\n        } else if (piece.slice(0,1)  === 'r') {\r\n            return 50 + ( isWhite ? rookEvalWhite[y][x] : rookEvalBlack[y][x] );\r\n        } else if (piece.slice(0,1)  === 'n') {\r\n            return 30 + knightEval[y][x];\r\n        } else if (piece.slice(0,1)  === 'b') {\r\n            return 30 + ( isWhite ? bishopEvalWhite[y][x] : bishopEvalBlack[y][x] );\r\n        } else if (piece.slice(0,1)  === 'q') {\r\n            return 90 + evalQueen[y][x];\r\n        } else if (piece.slice(0,1)  === 'k') {\r\n            return 900 + ( isWhite ? kingEvalWhite[y][x] : kingEvalBlack[y][x] );\r\n        }\r\n        throw \"Unknown piece type: \" + piece.slice(0,1) ;\r\n    };\r\n    \r\n    var absoluteValue = getAbsoluteValue(piece, parseInt(piece.slice(1,2)) === 0, x ,y);\r\n    return parseInt(piece.slice(1,2)) === 0 ? absoluteValue : -absoluteValue;\r\n};",["45","46"],{"ruleId":"47","severity":1,"message":"48","line":128,"column":16,"nodeType":"49","messageId":"50","endLine":128,"endColumn":26},{"ruleId":"47","severity":1,"message":"51","line":128,"column":28,"nodeType":"49","messageId":"50","endLine":128,"endColumn":38},{"ruleId":"47","severity":1,"message":"52","line":128,"column":40,"nodeType":"49","messageId":"50","endLine":128,"endColumn":51},{"ruleId":"53","severity":1,"message":"54","line":132,"column":13,"nodeType":"55","endLine":132,"endColumn":45},{"ruleId":"53","severity":1,"message":"54","line":160,"column":13,"nodeType":"55","endLine":160,"endColumn":45},{"ruleId":"53","severity":1,"message":"54","line":162,"column":11,"nodeType":"55","endLine":162,"endColumn":34},{"ruleId":"53","severity":1,"message":"54","line":163,"column":11,"nodeType":"55","endLine":163,"endColumn":43},{"ruleId":"53","severity":1,"message":"54","line":167,"column":11,"nodeType":"55","endLine":167,"endColumn":34},{"ruleId":"53","severity":1,"message":"54","line":171,"column":13,"nodeType":"55","endLine":171,"endColumn":45},{"ruleId":"53","severity":1,"message":"54","line":178,"column":13,"nodeType":"55","endLine":178,"endColumn":45},{"ruleId":"53","severity":1,"message":"54","line":180,"column":11,"nodeType":"55","endLine":180,"endColumn":34},{"ruleId":"53","severity":1,"message":"54","line":181,"column":11,"nodeType":"55","endLine":181,"endColumn":43},{"ruleId":"53","severity":1,"message":"54","line":196,"column":11,"nodeType":"55","endLine":196,"endColumn":34},{"ruleId":"53","severity":1,"message":"54","line":200,"column":13,"nodeType":"55","endLine":200,"endColumn":45},{"ruleId":"47","severity":1,"message":"56","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":17},{"ruleId":"57","severity":1,"message":"58","line":78,"column":18,"nodeType":"59","messageId":"60","endLine":78,"endColumn":20},{"ruleId":"57","severity":1,"message":"61","line":99,"column":22,"nodeType":"59","messageId":"60","endLine":99,"endColumn":24},{"ruleId":"62","severity":1,"message":"63","line":129,"column":21,"nodeType":"49","messageId":"64","endLine":129,"endColumn":22},{"ruleId":"62","severity":1,"message":"65","line":131,"column":25,"nodeType":"49","messageId":"64","endLine":131,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":151,"column":18,"nodeType":"59","messageId":"60","endLine":151,"endColumn":20},{"ruleId":"57","severity":1,"message":"61","line":162,"column":22,"nodeType":"59","messageId":"60","endLine":162,"endColumn":24},{"ruleId":"62","severity":1,"message":"66","line":381,"column":18,"nodeType":"49","messageId":"64","endLine":381,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":413,"column":56,"nodeType":"69","messageId":"70","endLine":413,"endColumn":118},{"ruleId":"47","severity":1,"message":"71","line":494,"column":50,"nodeType":"49","messageId":"50","endLine":494,"endColumn":61},{"ruleId":"57","severity":1,"message":"58","line":1113,"column":43,"nodeType":"59","messageId":"60","endLine":1113,"endColumn":45},{"ruleId":"57","severity":1,"message":"58","line":1113,"column":69,"nodeType":"59","messageId":"60","endLine":1113,"endColumn":71},{"ruleId":"62","severity":1,"message":"72","line":56,"column":13,"nodeType":"49","messageId":"64","endLine":56,"endColumn":21},{"ruleId":"62","severity":1,"message":"63","line":57,"column":18,"nodeType":"49","messageId":"64","endLine":57,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":188,"column":9,"nodeType":"75","messageId":"76","endLine":188,"endColumn":58},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},"no-unused-vars","'isPossible' is assigned a value but never used.","Identifier","unusedVar","'isCastling' is assigned a value but never used.","'isEnPassant' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'testUtils' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-redeclare","'i' is already defined.","redeclared","'j' is already defined.","'isPossible' is already defined.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'y', 'x'.","ArrowFunctionExpression","unsafeRefs","'pieceBefore' is assigned a value but never used.","'bestMove' is already defined.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-global-assign","no-unsafe-negation"]